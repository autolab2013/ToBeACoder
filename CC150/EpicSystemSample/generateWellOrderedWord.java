/** A string "aBIY" is said to be a well-ordered word as each of the letters 
 *  are in sequential manner regardless of case. So, "AbLe" is not a well-ordered word.
 *  You are a anti-hacker. you have a number of character sequences. Your task is to 
 *  generate all possible well-ordered word that can be generated by those numbers of 
 *  given character sequences.
 *  http://www.careercup.com/question?id=6284835370827776
 */

/** I think
 *  the invariant of a well-ordered is sort the character in alphabet order: first sort
 *  a sort string with length L: generate all possible substrings from length 1~L
 */

void generateWellOrderedWord(char[] chars){
	String ordered = sortChars(chars);
	for(int len = 1; len<ordered.length(); len++){
		for(int i=0;i<ordered.length();i++){
			String str = "";
			while(len > 0){
				str += charAt(i);
				len--;
			}
			System.out.println(str);
		}
	}
}
String sortChars(char[] chars){
	for(int i=0;i<chars.length-1;i++){
		int index = getMinIndex(chars, i+1,chars.length);
		swap(chars,i,index);
	}
	return new String(chars);
}

int getMinIndex(char[] chars, int index, int len){
	int min = Integer.max;
	int min_ind = -1;
	// upper letter is same as small letter
	for(int i=index; i<len;i++){
		int tolower = chars(i);
		if(chars(i)<97)
			//uppercase
			tolower += 32;
		if(min > tolower){
			min = tolower;
			min_ind = i;
		}
	}
	return min_ind;
}

void swap(char[] chars, int i, int index){
	char tmp = chars[i];
	chars[i] = chars[index];
	chars[index] = tmp;
}
